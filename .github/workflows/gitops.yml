name: GitOps CI/CD Pipeline

on:
  push:
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: az871209/arch

jobs:
  # Detect changes to determine what to build
  changes:
    runs-on: ubuntu-latest
    outputs:
      migration: ${{ steps.changes.outputs.migration }}
      server: ${{ steps.changes.outputs.server }}
      client: ${{ steps.changes.outputs.client }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            migration:
              - 'internal/database/migrations/**'
              - 'Dockerfile.migration'
              - 'sqlc.yaml'
            server:
              - '**'
              - '!client/**'
              - '!internal/database/migrations/**'
              - '!Dockerfile.migration'
              - '!*.md'
            client:
              - 'client/**'
              - 'proto/**'

  build-server-client:
    runs-on: ubuntu-latest
    needs: changes
    strategy:
      matrix:
        include:
          - component: rpc-server
            dockerfile: ./Dockerfile
            context: .
          - component: rpc-client
            dockerfile: ./client/Dockerfile
            context: ./client

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.component }}-${{ github.sha }}
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-migration:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.migration == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.migration
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:rpc-migration-${{ github.sha }}
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-manifests:
    needs: [changes, build-server-client, build-migration]
    if: always() && (needs.build-server-client.result == 'success' || needs.build-migration.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout manifest repository
        uses: actions/checkout@v4
        with:
          repository: polo871209/arch-manifest
          token: ${{ secrets.PAT_TOKEN }}
          path: manifests

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Update image tags using kustomize edit
        run: |
          cd manifests/overlays/dev
          echo "Updating server tag to: rpc-server-${{ github.sha }}"
          kustomize edit set image rpc-server="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:rpc-server-${{ github.sha }}"
          echo "Updating client tag to: rpc-client-${{ github.sha }}"
          kustomize edit set image rpc-client="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:rpc-client-${{ github.sha }}"

          # Update migration image if it was built
          if [ "${{ needs.changes.outputs.migration }}" == "true" ]; then
            echo "Updating migration tag to: rpc-migration-${{ github.sha }}"
            cd migration
            kustomize edit set namesuffix -- -${{ github.sha }}
            kustomize edit set image rpc-migration="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:rpc-migration-${{ github.sha }}"
            cd ../app
          fi

          # Show changes
          git diff

      - name: Commit and push changes
        run: |
          cd manifests
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          if git diff --quiet; then
            echo "No changes to commit"
          else
            COMMIT_MSG="Update image tags to ${{ github.sha }}"

            git add .
            git commit -m "$COMMIT_MSG$COMMIT_BODY"
            git push
          fi
