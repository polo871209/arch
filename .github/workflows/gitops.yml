name: GitOps CI/CD Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: az871209/arch

defaults:
  run:
    shell: bash

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      migration: ${{ steps.changes.outputs.migration }}
      server: ${{ steps.changes.outputs.server }}
      client: ${{ steps.changes.outputs.client }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            migration:
              - 'rpc-server/internal/database/migrations/**'
              - 'rpc-server/Dockerfile.migration'
              - 'rpc-server/sqlc.yaml'
            server:
              - 'rpc-server/**'
              - '!rpc-server/internal/database/migrations/**'
              - '!rpc-server/Dockerfile.migration'
              - '!*.md'
            client:
              - 'rpc-client/**'

  build-client:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.client == 'true'|| github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Build and push client image
        uses: ./.github/actions/build-push
        with:
          component: client
          context: ./rpc-client
          dockerfile: ./rpc-client/Dockerfile
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry-password: ${{ secrets.DOCKERHUB_TOKEN }}

  build-server:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.server == 'true' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Build and push server image
        uses: ./.github/actions/build-push
        with:
          component: server
          context: ./rpc-server
          dockerfile: ./rpc-server/Dockerfile
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry-password: ${{ secrets.DOCKERHUB_TOKEN }}

  build-migration:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.migration == 'true'|| github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Build and push migration image
        uses: ./.github/actions/build-push
        with:
          component: migration
          context: ./rpc-server
          dockerfile: ./rpc-server/Dockerfile.migration
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry-password: ${{ secrets.DOCKERHUB_TOKEN }}

  update-manifests:
    runs-on: ubuntu-latest
    needs: [changes, build-client, build-server, build-migration]
    if: always() && (needs.build-client.result == 'success' || needs.build-server.result == 'success' || needs.build-migration.result == 'success')
    steps:
      - name: Set short git commit SHA
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
      - name: Checkout manifest repository
        uses: actions/checkout@v4
        with:
          repository: polo871209/arch-manifest
          token: ${{ secrets.PAT_TOKEN }}
          path: manifests

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Update image tags and labels
        run: |
          cd manifests/overlays/dev

          if [ "${{ needs.changes.outputs.server }}" == "true" ] && [ "${{ needs.build-server.result }}" == "success" ]; then
            kustomize edit set image rpc-server="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:rpc-server-${{ env.COMMIT_SHORT_SHA }}"
          fi

          if [ "${{ needs.changes.outputs.client }}" == "true" ] && [ "${{ needs.build-client.result }}" == "success" ]; then
            kustomize edit set image rpc-client="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:rpc-client-${{ env.COMMIT_SHORT_SHA }}"
          fi

          if [ "${{ needs.changes.outputs.migration }}" == "true" ] && [ "${{ needs.build-migration.result }}" == "success" ]; then
            cd migration
            kustomize edit set namesuffix -- -${{ env.COMMIT_SHORT_SHA }}
            kustomize edit set image rpc-migration="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:rpc-migration-${{ env.COMMIT_SHORT_SHA }}"
            kustomize edit add label app.kubernetes.io/version:${{ env.COMMIT_SHORT_SHA }}
            cd ..
          fi

          kustomize edit add label app.kubernetes.io/version:${{ env.COMMIT_SHORT_SHA }}
          git diff

      - name: Commit and push changes
        run: |
          cd manifests
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          if git diff --quiet; then
            echo "No changes to commit"
          else
            COMMIT_MSG="Update to ${{ env.COMMIT_SHORT_SHA }}"
            COMPONENTS=""
            
            [ "${{ needs.changes.outputs.server }}" == "true" ] && [ "${{ needs.build-server.result }}" == "success" ] && COMPONENTS="${COMPONENTS} server"
            [ "${{ needs.changes.outputs.client }}" == "true" ] && [ "${{ needs.build-client.result }}" == "success" ] && COMPONENTS="${COMPONENTS} client"
            [ "${{ needs.changes.outputs.migration }}" == "true" ] && [ "${{ needs.build-migration.result }}" == "success" ] && COMPONENTS="${COMPONENTS} migration"
            
            [ -n "$COMPONENTS" ] && COMMIT_MSG="$COMMIT_MSG (${COMPONENTS# })"

            git add .
            git commit -m "$COMMIT_MSG"
            git push
          fi
